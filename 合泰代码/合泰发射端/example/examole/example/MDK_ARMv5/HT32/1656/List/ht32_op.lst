


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       **********************                              */
    2 00000000         ;/* ht32f_op.s: HT32 Series Flash Option Bytes Block    
                                                                           */
    3 00000000         ;/******************************************************
                       **********************                              */
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                                                           */
    5 00000000         ;/******************************************************
                       **********************                              */
    6 00000000         ;  Supported Device
    7 00000000         ;  ========================================
    8 00000000         ;   HT32F1653, HT32F1654
    9 00000000         ;   HT32F1655, HT32F1656
   10 00000000         ;   HT32F12365, HT32F12366
   11 00000000         ;   HT32F12345
   12 00000000         
   13 00000000         ;// <o>  HT32 Device
   14 00000000         ;//      <0=> By Project Asm Define
   15 00000000         ;//      <1=> HT32F1653/1654/1655/1656
   16 00000000         ;//      <2=> HT32F12365/12366
   17 00000000         ;//      <3=> HT32F12345
   18 00000000 00000000 
                       USE_HT32_CHIP_SET
                               EQU              0
   19 00000000         
   20 00000000 00000001 
                       HT32F1653_54_55_56
                               EQU              1
   21 00000000 00000002 
                       HT32F12365_66
                               EQU              2
   22 00000000 00000003 
                       HT32F12345
                               EQU              3
   23 00000000         
   24 00000000                 IF               USE_HT32_CHIP_SET=0
   25 00000000                 ELSE
   27                          ENDIF
   28 00000000         
   29 00000000         ;// <e> Program setting into Option Byte
   30 00000000         ;// <i> Setting of Page erase/program protection and sec
                       urity protection of Flash (configured in Option Byte)
   31 00000000 00000000 
                       FLASH_OPT
                               EQU              0
   32 00000000         ;// </e>
   33 00000000         
   34 00000000         ;// <h> ------------------------------------------------
                       ------------------------------------------------------
   35 00000000         ;// </h>
   36 00000000         ;// <h> -- Main Flash page erase/program protection (OB_
                       PP0 bits)
   37 00000000         ;// <i> Enable page erase/program protection to prevent 
                       unwanted change of Flash contents.
   38 00000000         ;// <i> One bit for n pages. Check FMC chapter of User M
                       anual for detailed.
   39 00000000         ;//   <o0.0 >  Enable page erase/Program Protection 0  -
                        OB_PP[0]



ARM Macro Assembler    Page 2 


   40 00000000         ;//   <o0.1 >  Enable page erase/Program Protection 1  -
                        OB_PP[1]
   41 00000000         ;//   <o0.2 >  Enable page erase/Program Protection 2  -
                        OB_PP[2]
   42 00000000         ;//   <o0.3 >  Enable page erase/Program Protection 3  -
                        OB_PP[3]
   43 00000000         ;//   <o0.4 >  Enable page erase/Program Protection 4  -
                        OB_PP[4]
   44 00000000         ;//   <o0.5 >  Enable page erase/Program Protection 5  -
                        OB_PP[5]
   45 00000000         ;//   <o0.6 >  Enable page erase/Program Protection 6  -
                        OB_PP[6]
   46 00000000         ;//   <o0.7 >  Enable page erase/Program Protection 7  -
                        OB_PP[7]
   47 00000000         ;//   <o0.8 >  Enable page erase/Program Protection 8  -
                        OB_PP[8]
   48 00000000         ;//   <o0.9 >  Enable page erase/Program Protection 9  -
                        OB_PP[9]
   49 00000000         ;//   <o0.10 > Enable page erase/Program Protection 10 -
                        OB_PP[10]
   50 00000000         ;//   <o0.11 > Enable page erase/Program Protection 11 -
                        OB_PP[11]
   51 00000000         ;//   <o0.12 > Enable page erase/Program Protection 12 -
                        OB_PP[12]
   52 00000000         ;//   <o0.13 > Enable page erase/Program Protection 13 -
                        OB_PP[13]
   53 00000000         ;//   <o0.14 > Enable page erase/Program Protection 14 -
                        OB_PP[14]
   54 00000000         ;//   <o0.15 > Enable page erase/Program Protection 15 -
                        OB_PP[15]
   55 00000000         ;//   <o0.16 > Enable page erase/Program Protection 16 -
                        OB_PP[16]
   56 00000000         ;//   <o0.17 > Enable page erase/Program Protection 17 -
                        OB_PP[17]
   57 00000000         ;//   <o0.18 > Enable page erase/Program Protection 18 -
                        OB_PP[18]
   58 00000000         ;//   <o0.19 > Enable page erase/Program Protection 19 -
                        OB_PP[19]
   59 00000000         ;//   <o0.20 > Enable page erase/Program Protection 20 -
                        OB_PP[20]
   60 00000000         ;//   <o0.21 > Enable page erase/Program Protection 21 -
                        OB_PP[21]
   61 00000000         ;//   <o0.22 > Enable page erase/Program Protection 22 -
                        OB_PP[22]
   62 00000000         ;//   <o0.23 > Enable page erase/Program Protection 23 -
                        OB_PP[23]
   63 00000000         ;//   <o0.24 > Enable page erase/Program Protection 24 -
                        OB_PP[24]
   64 00000000         ;//   <o0.25 > Enable page erase/Program Protection 25 -
                        OB_PP[25]
   65 00000000         ;//   <o0.26 > Enable page erase/Program Protection 26 -
                        OB_PP[26]
   66 00000000         ;//   <o0.27 > Enable page erase/Program Protection 27 -
                        OB_PP[27]
   67 00000000         ;//   <o0.28 > Enable page erase/Program Protection 28 -
                        OB_PP[28]
   68 00000000         ;//   <o0.29 > Enable page erase/Program Protection 29 -
                        OB_PP[29]
   69 00000000         ;//   <o0.30 > Enable page erase/Program Protection 30 -



ARM Macro Assembler    Page 3 


                        OB_PP[30]
   70 00000000         ;//   <o0.31 > Enable page erase/Program Protection 31 -
                        OB_PP[31]
   71 00000000         ;// </h>
   72 00000000         ;// <h> -- Main Flash page erase/program protection (OB_
                       PP1 bits)
   73 00000000         ;// <i> Enable page erase/program protection to prevent 
                       unwanted change of Flash contents.
   74 00000000         ;// <i> One bit for n pages. Check FMC chapter of User M
                       anual for detailed.
   75 00000000         ;//   <o1.0 >  Enable page erase/Program Protection 32 -
                        OB_PP[32]
   76 00000000         ;//   <o1.1 >  Enable page erase/Program Protection 33 -
                        OB_PP[33]
   77 00000000         ;//   <o1.2 >  Enable page erase/Program Protection 34 -
                        OB_PP[34]
   78 00000000         ;//   <o1.3 >  Enable page erase/Program Protection 35 -
                        OB_PP[35]
   79 00000000         ;//   <o1.4 >  Enable page erase/Program Protection 36 -
                        OB_PP[36]
   80 00000000         ;//   <o1.5 >  Enable page erase/Program Protection 37 -
                        OB_PP[37]
   81 00000000         ;//   <o1.6 >  Enable page erase/Program Protection 38 -
                        OB_PP[38]
   82 00000000         ;//   <o1.7 >  Enable page erase/Program Protection 39 -
                        OB_PP[39]
   83 00000000         ;//   <o1.8 >  Enable page erase/Program Protection 40 -
                        OB_PP[40]
   84 00000000         ;//   <o1.9 >  Enable page erase/Program Protection 41 -
                        OB_PP[41]
   85 00000000         ;//   <o1.10 > Enable page erase/Program Protection 42 -
                        OB_PP[42]
   86 00000000         ;//   <o1.11 > Enable page erase/Program Protection 43 -
                        OB_PP[43]
   87 00000000         ;//   <o1.12 > Enable page erase/Program Protection 44 -
                        OB_PP[44]
   88 00000000         ;//   <o1.13 > Enable page erase/Program Protection 45 -
                        OB_PP[45]
   89 00000000         ;//   <o1.14 > Enable page erase/Program Protection 46 -
                        OB_PP[46]
   90 00000000         ;//   <o1.15 > Enable page erase/Program Protection 47 -
                        OB_PP[47]
   91 00000000         ;//   <o1.16 > Enable page erase/Program Protection 48 -
                        OB_PP[48]
   92 00000000         ;//   <o1.17 > Enable page erase/Program Protection 49 -
                        OB_PP[49]
   93 00000000         ;//   <o1.18 > Enable page erase/Program Protection 50 -
                        OB_PP[50]
   94 00000000         ;//   <o1.19 > Enable page erase/Program Protection 51 -
                        OB_PP[51]
   95 00000000         ;//   <o1.20 > Enable page erase/Program Protection 52 -
                        OB_PP[52]
   96 00000000         ;//   <o1.21 > Enable page erase/Program Protection 53 -
                        OB_PP[53]
   97 00000000         ;//   <o1.22 > Enable page erase/Program Protection 54 -
                        OB_PP[54]
   98 00000000         ;//   <o1.23 > Enable page erase/Program Protection 55 -
                        OB_PP[55]
   99 00000000         ;//   <o1.24 > Enable page erase/Program Protection 56 -



ARM Macro Assembler    Page 4 


                        OB_PP[56]
  100 00000000         ;//   <o1.25 > Enable page erase/Program Protection 57 -
                        OB_PP[57]
  101 00000000         ;//   <o1.26 > Enable page erase/Program Protection 58 -
                        OB_PP[58]
  102 00000000         ;//   <o1.27 > Enable page erase/Program Protection 59 -
                        OB_PP[59]
  103 00000000         ;//   <o1.28 > Enable page erase/Program Protection 60 -
                        OB_PP[60]
  104 00000000         ;//   <o1.29 > Enable page erase/Program Protection 61 -
                        OB_PP[61]
  105 00000000         ;//   <o1.30 > Enable page erase/Program Protection 62 -
                        OB_PP[62]
  106 00000000         ;//   <o1.31 > Enable page erase/Program Protection 63 -
                        OB_PP[63]
  107 00000000         ;// </h>
  108 00000000         ;// <h> -- Main Flash page erase/program protection (OB_
                       PP2 bits)
  109 00000000         ;// <i> Enable page erase/program protection to prevent 
                       unwanted change of Flash contents.
  110 00000000         ;// <i> One bit for n pages. Check FMC chapter of User M
                       anual for detailed.
  111 00000000         ;//   <o2.0 >  Enable page erase/Program Protection 64 -
                        OB_PP[64]
  112 00000000         ;//   <o2.1 >  Enable page erase/Program Protection 65 -
                        OB_PP[65]
  113 00000000         ;//   <o2.2 >  Enable page erase/Program Protection 66 -
                        OB_PP[66]
  114 00000000         ;//   <o2.3 >  Enable page erase/Program Protection 67 -
                        OB_PP[67]
  115 00000000         ;//   <o2.4 >  Enable page erase/Program Protection 68 -
                        OB_PP[68]
  116 00000000         ;//   <o2.5 >  Enable page erase/Program Protection 69 -
                        OB_PP[69]
  117 00000000         ;//   <o2.6 >  Enable page erase/Program Protection 70 -
                        OB_PP[70]
  118 00000000         ;//   <o2.7 >  Enable page erase/Program Protection 71 -
                        OB_PP[71]
  119 00000000         ;//   <o2.8 >  Enable page erase/Program Protection 72 -
                        OB_PP[72]
  120 00000000         ;//   <o2.9 >  Enable page erase/Program Protection 73 -
                        OB_PP[73]
  121 00000000         ;//   <o2.10 > Enable page erase/Program Protection 74 -
                        OB_PP[74]
  122 00000000         ;//   <o2.11 > Enable page erase/Program Protection 75 -
                        OB_PP[75]
  123 00000000         ;//   <o2.12 > Enable page erase/Program Protection 76 -
                        OB_PP[76]
  124 00000000         ;//   <o2.13 > Enable page erase/Program Protection 77 -
                        OB_PP[77]
  125 00000000         ;//   <o2.14 > Enable page erase/Program Protection 78 -
                        OB_PP[78]
  126 00000000         ;//   <o2.15 > Enable page erase/Program Protection 79 -
                        OB_PP[79]
  127 00000000         ;//   <o2.16 > Enable page erase/Program Protection 80 -
                        OB_PP[80]
  128 00000000         ;//   <o2.17 > Enable page erase/Program Protection 81 -
                        OB_PP[81]
  129 00000000         ;//   <o2.18 > Enable page erase/Program Protection 82 -



ARM Macro Assembler    Page 5 


                        OB_PP[82]
  130 00000000         ;//   <o2.19 > Enable page erase/Program Protection 83 -
                        OB_PP[83]
  131 00000000         ;//   <o2.20 > Enable page erase/Program Protection 84 -
                        OB_PP[84]
  132 00000000         ;//   <o2.21 > Enable page erase/Program Protection 85 -
                        OB_PP[85]
  133 00000000         ;//   <o2.22 > Enable page erase/Program Protection 86 -
                        OB_PP[86]
  134 00000000         ;//   <o2.23 > Enable page erase/Program Protection 87 -
                        OB_PP[87]
  135 00000000         ;//   <o2.24 > Enable page erase/Program Protection 88 -
                        OB_PP[88]
  136 00000000         ;//   <o2.25 > Enable page erase/Program Protection 89 -
                        OB_PP[89]
  137 00000000         ;//   <o2.26 > Enable page erase/Program Protection 90 -
                        OB_PP[90]
  138 00000000         ;//   <o2.27 > Enable page erase/Program Protection 91 -
                        OB_PP[91]
  139 00000000         ;//   <o2.28 > Enable page erase/Program Protection 92 -
                        OB_PP[92]
  140 00000000         ;//   <o2.29 > Enable page erase/Program Protection 93 -
                        OB_PP[93]
  141 00000000         ;//   <o2.30 > Enable page erase/Program Protection 94 -
                        OB_PP[94]
  142 00000000         ;//   <o2.31 > Enable page erase/Program Protection 95 -
                        OB_PP[95]
  143 00000000         ;// </h>
  144 00000000         ;// <h> -- Main Flash page erase/program protection (OB_
                       PP3 bits)
  145 00000000         ;// <i> Enable page erase/program protection to prevent 
                       unwanted change of Flash contents.
  146 00000000         ;// <i> One bit for n pages. Check FMC chapter of User M
                       anual for detailed.
  147 00000000         ;//   <o3.0 >  Enable page erase/Program Protection 96  
                       - OB_PP[96]
  148 00000000         ;//   <o3.1 >  Enable page erase/Program Protection 97  
                       - OB_PP[97]
  149 00000000         ;//   <o3.2 >  Enable page erase/Program Protection 98  
                       - OB_PP[98]
  150 00000000         ;//   <o3.3 >  Enable page erase/Program Protection 99  
                       - OB_PP[99]
  151 00000000         ;//   <o3.4 >  Enable page erase/Program Protection 100 
                       - OB_PP[100]
  152 00000000         ;//   <o3.5 >  Enable page erase/Program Protection 101 
                       - OB_PP[101]
  153 00000000         ;//   <o3.6 >  Enable page erase/Program Protection 102 
                       - OB_PP[102]
  154 00000000         ;//   <o3.7 >  Enable page erase/Program Protection 103 
                       - OB_PP[103]
  155 00000000         ;//   <o3.8 >  Enable page erase/Program Protection 104 
                       - OB_PP[104]
  156 00000000         ;//   <o3.9 >  Enable page erase/Program Protection 105 
                       - OB_PP[105]
  157 00000000         ;//   <o3.10 > Enable page erase/Program Protection 106 
                       - OB_PP[106]
  158 00000000         ;//   <o3.11 > Enable page erase/Program Protection 107 
                       - OB_PP[107]
  159 00000000         ;//   <o3.12 > Enable page erase/Program Protection 108 



ARM Macro Assembler    Page 6 


                       - OB_PP[108]
  160 00000000         ;//   <o3.13 > Enable page erase/Program Protection 109 
                       - OB_PP[109]
  161 00000000         ;//   <o3.14 > Enable page erase/Program Protection 110 
                       - OB_PP[110]
  162 00000000         ;//   <o3.15 > Enable page erase/Program Protection 111 
                       - OB_PP[111]
  163 00000000         ;//   <o3.16 > Enable page erase/Program Protection 112 
                       - OB_PP[112]
  164 00000000         ;//   <o3.17 > Enable page erase/Program Protection 113 
                       - OB_PP[113]
  165 00000000         ;//   <o3.18 > Enable page erase/Program Protection 114 
                       - OB_PP[114]
  166 00000000         ;//   <o3.19 > Enable page erase/Program Protection 115 
                       - OB_PP[115]
  167 00000000         ;//   <o3.20 > Enable page erase/Program Protection 116 
                       - OB_PP[116]
  168 00000000         ;//   <o3.21 > Enable page erase/Program Protection 117 
                       - OB_PP[117]
  169 00000000         ;//   <o3.22 > Enable page erase/Program Protection 118 
                       - OB_PP[118]
  170 00000000         ;//   <o3.23 > Enable page erase/Program Protection 119 
                       - OB_PP[119]
  171 00000000         ;//   <o3.24 > Enable page erase/Program Protection 120 
                       - OB_PP[120]
  172 00000000         ;//   <o3.25 > Enable page erase/Program Protection 121 
                       - OB_PP[121]
  173 00000000         ;//   <o3.26 > Enable page erase/Program Protection 122 
                       - OB_PP[122]
  174 00000000         ;//   <o3.27 > Enable page erase/Program Protection 123 
                       - OB_PP[123]
  175 00000000         ;//   <o3.28 > Enable page erase/Program Protection 124 
                       - OB_PP[124]
  176 00000000         ;//   <o3.29 > Enable page erase/Program Protection 125 
                       - OB_PP[125]
  177 00000000         ;//   <o3.30 > Enable page erase/Program Protection 126 
                       - OB_PP[126]
  178 00000000         ;//   <o3.31 > Enable page erase/Program Protection 127 
                       - OB_PP[127]
  179 00000000         ;// </h>
  180 00000000         
  181 00000000         ;// <o4.0> -- Enable security protection of Flash (OB_CP
                       [0])
  182 00000000         ;//   <i> Enable security protection to prevent illegal 
                       Flash code/data access
  183 00000000         ;// <o4.1> -- Enable Option Byte erase/program protectio
                       n (OB_CP[1])
  184 00000000         ;//   <i> Enable Option Byte erase/program protection to
                        prevent unwanted change of Option Byte
  185 00000000         ;// <o0> -- Option Byte value: OB_PP0 (0x1FF00000)
  186 00000000         ;// <o1> -- Option Byte value: OB_PP1 (0x1FF00004)
  187 00000000         ;// <o2> -- Option Byte value: OB_PP2 (0x1FF00008)
  188 00000000         ;// <o3> -- Option Byte value: OB_PP3 (0x1FF0000C)
  189 00000000         ;// <o4> -- Option Byte value: OB_CP  (0x1FF00010)
  190 00000000         ;// <h> -- !!! Note: One OB_PP bit for setting n Pages. 
                       Check FMC chapter of User Manual for detailed.
  191 00000000         ;// </h>
  192 00000000         ;// <h> ------------------------------------------------
                       ------------------------------------------------------



ARM Macro Assembler    Page 7 


  193 00000000         ;// </h>
  194 00000000         
  195 00000000 00000000 
                       PP0     EQU              0x00000000
  196 00000000 00000000 
                       PP1     EQU              0x00000000
  197 00000000 00000000 
                       PP2     EQU              0x00000000
  198 00000000 00000000 
                       PP3     EQU              0x00000000
  199 00000000 00000000 
                       CP      EQU              0x00000000
  200 00000000         
  201 00000000 FFFFFFFF 
                       nPP0    EQU              PP0:EOR:0xFFFFFFFF
  202 00000000 FFFFFFFF 
                       nPP1    EQU              PP1:EOR:0xFFFFFFFF
  203 00000000 FFFFFFFF 
                       nPP2    EQU              PP2:EOR:0xFFFFFFFF
  204 00000000 FFFFFFFF 
                       nPP3    EQU              PP3:EOR:0xFFFFFFFF
  205 00000000 FFFFFFFF 
                       nCP     EQU              CP:EOR:0xFFFFFFFF
  206 00000000         
  207 00000000                 IF               nPP0 = 0xFFFFFFFF && nPP1 = 0xF
FFFFFFF && nPP2 = 0xFFFFFFFF && nPP3 = 0xFFFFFFFF &&  nCP = 0xFFFFFFFF
  208 00000000 FFFFFFFF 
                       CK      EQU              0xFFFFFFFF
  209 00000000                 ELSE
  211                          ENDIF
  212 00000000 FFFFFFFF 
                       RES     EQU              0xFFFFFFFF
  213 00000000         
  214 00000000         
  215 00000000                 IF               FLASH_OPT <> 0
  228                          ENDIF
  229 00000000         
  230 00000000         ;// <e> Program Bootloader Options
  231 00000000         ;BOOT_OPT      EQU     0
  232 00000000         ;//   <o> Bootloader Waiting time (mS) <1500-14200:50>
  233 00000000         ;//    <i> Bootloader Waiting time in mSecond
  234 00000000         ;BOOTOPTV EQU        1500
  235 00000000         
  236 00000000         ;    IF BOOT_OPT <> 0
  237 00000000         ;BOOTOPT EQU         0xFFFFFF00:OR:(BOOTOPTV - 1500)/50
  238 00000000         ;    ELSE
  239 00000000         ;BOOTOPT EQU         0xFFFFFFFF
  240 00000000         ;    ENDIF
  241 00000000         ;
  242 00000000         ;                IF      BOOT_OPT <> 0
  243 00000000         ;                AREA    |.ARM.__AT_0x1FF0002C|, CODE, R
                       EADONLY
  244 00000000         ;                DCD   BOOTOPT       ; 0x1FF0002C
  245 00000000         ;                ENDIF
  246 00000000         
  247 00000000         ;// </e>
  248 00000000         
  249 00000000         ;// <e> WDT Option.
  250 00000000         ;// <i> WDT had been open automatically after MCU Power 



ARM Macro Assembler    Page 8 


                       On, and WDT Reload Value = 8s.
  251 00000000         ;// <i> *Note : Not Support HT32 full Series. 
  252 00000000         ;// <i> *       HT32F1755_65 does not support the functi
                       on.
  253 00000000         ;// <i> *       HT32F1653_54 does not support the functi
                       on.
  254 00000000         ;// <i> *       HT32F1655_56 does not support the functi
                       on.
  255 00000000         ;// <i> *       HT32F12345 does not support the function
                       .
  256 00000000         ;// <i> *       HT32F12365_66 does not support the funct
                       ion.
  257 00000000         ;// <i> *       HT32F52220_30 does not support the funct
                       ion.
  258 00000000         ;// <i> *       HT32F52231_41 does not support the funct
                       ion.
  259 00000000         ;// <i> *       HT32F52331_41 does not support the funct
                       ion.
  260 00000000         ;// <i> *       HT32F52342_52 does not support the funct
                       ion.
  261 00000000         ;// <i> *       HT32F52243_53 does not support the funct
                       ion.
  262 00000000 00000000 
                       WDT_OPT EQU              0
  263 00000000 FFFF7A92 
                       WDT_MAGIC_KEY
                               EQU              0xFFFF7A92
  264 00000000         
  265 00000000                 IF               WDT_OPT <> 0
  274                          ENDIF
  275 00000000         ;// </e>
  276 00000000         
  277 00000000         ;// <e> Program Checksum
  278 00000000 00000000 
                       CHECKSUM_OPT
                               EQU              0
  279 00000000         ;//   <o0> Writer Checksum: Code
  280 00000000         ;//   <o1> Writer Checksum: Data
  281 00000000         ;//   <o2> Writer Checksum: Code+Option
  282 00000000 FFFFFFFF 
                       CK_CODE EQU              0xFFFFFFFF
  283 00000000 FFFFFFFF 
                       CK_DATA EQU              0xFFFFFFFF
  284 00000000 FFFFFFFF 
                       CK_CODEOP
                               EQU              0xFFFFFFFF
  285 00000000         
  286 00000000                 IF               CHECKSUM_OPT <> 0
  291                          ENDIF
  292 00000000         
  293 00000000         ;// </e>
  294 00000000         
  295 00000000         ;// <e> Program user's Flash data into Option Byte
  296 00000000         ;// <i> Address range: from 0x1FF00050 to 0x1FF003EF/0x1
                       FF002FF (Max 928/432 Bytes)
  297 00000000 00000000 
                       FLASH_DATA
                               EQU              0
  298 00000000         ;// </e>



ARM Macro Assembler    Page 9 


  299 00000000                 IF               FLASH_DATA <> 0
  302                          ENDIF
  303 00000000         
  304 00000000                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\ht32\1656\obj\ht32_op.d -o.\ht32\1656\obj\ht32_op.o -IE:\MDK5\AR
M\RV31\INC -IE:\MDK5\ARM\CMSIS\Include --predefine="__MICROLIB SETA 1" --predef
ine="__UVISION_VERSION SETA 514" --predefine="USE_HT32_CHIP SETA 1" --list=.\ht
32\1656\list\ht32_op.lst ht32_op.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CHECKSUM_OPT 00000000

Symbol: CHECKSUM_OPT
   Definitions
      At line 278 in file ht32_op.s
   Uses
      At line 286 in file ht32_op.s
Comment: CHECKSUM_OPT used once
CK FFFFFFFF

Symbol: CK
   Definitions
      At line 208 in file ht32_op.s
   Uses
      None
Comment: CK unused
CK_CODE FFFFFFFF

Symbol: CK_CODE
   Definitions
      At line 282 in file ht32_op.s
   Uses
      None
Comment: CK_CODE unused
CK_CODEOP FFFFFFFF

Symbol: CK_CODEOP
   Definitions
      At line 284 in file ht32_op.s
   Uses
      None
Comment: CK_CODEOP unused
CK_DATA FFFFFFFF

Symbol: CK_DATA
   Definitions
      At line 283 in file ht32_op.s
   Uses
      None
Comment: CK_DATA unused
CP 00000000

Symbol: CP
   Definitions
      At line 199 in file ht32_op.s
   Uses
      At line 205 in file ht32_op.s
Comment: CP used once
FLASH_DATA 00000000

Symbol: FLASH_DATA
   Definitions
      At line 297 in file ht32_op.s
   Uses
      At line 299 in file ht32_op.s
Comment: FLASH_DATA used once
FLASH_OPT 00000000

Symbol: FLASH_OPT



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 31 in file ht32_op.s
   Uses
      At line 215 in file ht32_op.s
Comment: FLASH_OPT used once
HT32F12345 00000003

Symbol: HT32F12345
   Definitions
      At line 22 in file ht32_op.s
   Uses
      None
Comment: HT32F12345 unused
HT32F12365_66 00000002

Symbol: HT32F12365_66
   Definitions
      At line 21 in file ht32_op.s
   Uses
      None
Comment: HT32F12365_66 unused
HT32F1653_54_55_56 00000001

Symbol: HT32F1653_54_55_56
   Definitions
      At line 20 in file ht32_op.s
   Uses
      None
Comment: HT32F1653_54_55_56 unused
PP0 00000000

Symbol: PP0
   Definitions
      At line 195 in file ht32_op.s
   Uses
      At line 201 in file ht32_op.s
Comment: PP0 used once
PP1 00000000

Symbol: PP1
   Definitions
      At line 196 in file ht32_op.s
   Uses
      At line 202 in file ht32_op.s
Comment: PP1 used once
PP2 00000000

Symbol: PP2
   Definitions
      At line 197 in file ht32_op.s
   Uses
      At line 203 in file ht32_op.s
Comment: PP2 used once
PP3 00000000

Symbol: PP3
   Definitions
      At line 198 in file ht32_op.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 204 in file ht32_op.s
Comment: PP3 used once
RES FFFFFFFF

Symbol: RES
   Definitions
      At line 212 in file ht32_op.s
   Uses
      None
Comment: RES unused
USE_HT32_CHIP_SET 00000000

Symbol: USE_HT32_CHIP_SET
   Definitions
      At line 18 in file ht32_op.s
   Uses
      At line 24 in file ht32_op.s
Comment: USE_HT32_CHIP_SET used once
WDT_MAGIC_KEY FFFF7A92

Symbol: WDT_MAGIC_KEY
   Definitions
      At line 263 in file ht32_op.s
   Uses
      None
Comment: WDT_MAGIC_KEY unused
WDT_OPT 00000000

Symbol: WDT_OPT
   Definitions
      At line 262 in file ht32_op.s
   Uses
      At line 265 in file ht32_op.s
Comment: WDT_OPT used once
nCP FFFFFFFF

Symbol: nCP
   Definitions
      At line 205 in file ht32_op.s
   Uses
      At line 207 in file ht32_op.s
Comment: nCP used once
nPP0 FFFFFFFF

Symbol: nPP0
   Definitions
      At line 201 in file ht32_op.s
   Uses
      At line 207 in file ht32_op.s
Comment: nPP0 used once
nPP1 FFFFFFFF

Symbol: nPP1
   Definitions
      At line 202 in file ht32_op.s
   Uses
      At line 207 in file ht32_op.s
Comment: nPP1 used once
nPP2 FFFFFFFF



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: nPP2
   Definitions
      At line 203 in file ht32_op.s
   Uses
      At line 207 in file ht32_op.s
Comment: nPP2 used once
nPP3 FFFFFFFF

Symbol: nPP3
   Definitions
      At line 204 in file ht32_op.s
   Uses
      At line 207 in file ht32_op.s
Comment: nPP3 used once
24 symbols
357 symbols in table
